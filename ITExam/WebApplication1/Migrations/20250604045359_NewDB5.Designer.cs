// <auto-generated />
using System;
using ITExam.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITExam.Migrations
{
    [DbContext(typeof(ITExamDbContext))]
    [Migration("20250604045359_NewDB5")]
    partial class NewDB5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITExam.Models.CauHoiNganHangDe", b =>
                {
                    b.Property<int>("MaCauHoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCauHoi"));

                    b.Property<double?>("DiemCauHoi")
                        .HasColumnType("float");

                    b.Property<string>("LoaiCauHoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaCLO")
                        .HasColumnType("int");

                    b.Property<int?>("MaChuong")
                        .HasColumnType("int");

                    b.Property<int>("MaNHD")
                        .HasColumnType("int");

                    b.Property<string>("NoiDungCauHoi")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("NoiDungLuaChon")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("MaCauHoi");

                    b.HasIndex("MaNHD");

                    b.ToTable("CauHoiNganHangDes");
                });

            modelBuilder.Entity("ITExam.Models.ChiTietBaiLam", b =>
                {
                    b.Property<int>("ChiTietBaiLamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChiTietBaiLamId"));

                    b.Property<string>("CauTraLoiTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CauTraLoiTuLuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiemDuocCham")
                        .HasColumnType("float");

                    b.Property<int>("LichSuId")
                        .HasColumnType("int");

                    b.Property<int>("MaCauHoi")
                        .HasColumnType("int");

                    b.HasKey("ChiTietBaiLamId");

                    b.HasIndex("LichSuId");

                    b.HasIndex("MaCauHoi");

                    b.ToTable("ChiTietBaiLams");
                });

            modelBuilder.Entity("ITExam.Models.ChiTietLopHoc", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("MaLopHoc")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThamGia")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "MaLopHoc");

                    b.HasIndex("MaLopHoc");

                    b.ToTable("ChiTietLopHocs");
                });

            modelBuilder.Entity("ITExam.Models.DanhSachDeThiCuaLopHoc", b =>
                {
                    b.Property<int>("MaLopHoc")
                        .HasColumnType("int");

                    b.Property<int>("MaDe")
                        .HasColumnType("int");

                    b.Property<bool?>("Access")
                        .HasColumnType("bit");

                    b.Property<bool>("LaDeThi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgayThem")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("MaLopHoc", "MaDe");

                    b.HasIndex("MaDe");

                    b.ToTable("DanhSachDeThiCuaLopHocs");
                });

            modelBuilder.Entity("ITExam.Models.DeThi", b =>
                {
                    b.Property<int>("MaDe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDe"));

                    b.Property<string>("LoaiDe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaNHD")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDe")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ThoiGianLamBai")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("MaDe");

                    b.HasIndex("MaNHD");

                    b.HasIndex("UserID");

                    b.ToTable("DeThis");
                });

            modelBuilder.Entity("ITExam.Models.LichSuLamBai", b =>
                {
                    b.Property<int>("LichSuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LichSuId"));

                    b.Property<double?>("Diem")
                        .HasColumnType("float");

                    b.Property<int>("MaDe")
                        .HasColumnType("int");

                    b.Property<int>("MaLopHoc")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianBatDauLamBai")
                        .HasColumnType("datetime2");

                    b.Property<int>("ThoiGianLamBai")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGianNop")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LichSuId");

                    b.HasIndex("MaDe");

                    b.HasIndex("MaLopHoc");

                    b.HasIndex("UserId");

                    b.ToTable("LichSuLamBais");
                });

            modelBuilder.Entity("ITExam.Models.LopHoc", b =>
                {
                    b.Property<int>("MaLopHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLopHoc"));

                    b.Property<string>("MoTa")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenLopHoc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MaLopHoc");

                    b.HasIndex("UserId");

                    b.ToTable("LopHocs");
                });

            modelBuilder.Entity("ITExam.Models.MaTranDeThi", b =>
                {
                    b.Property<int>("MaMaTran")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMaTran"));

                    b.Property<int>("MaCLO")
                        .HasColumnType("int");

                    b.Property<int>("MaChuong")
                        .HasColumnType("int");

                    b.Property<int>("MaDe")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongCauHoi")
                        .HasColumnType("int");

                    b.HasKey("MaMaTran");

                    b.HasIndex("MaDe");

                    b.ToTable("MaTranDeThis");
                });

            modelBuilder.Entity("ITExam.Models.NganHangDe", b =>
                {
                    b.Property<int>("MaNHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNHD"));

                    b.Property<string>("LoaiDe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenNHD")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MaNHD");

                    b.HasIndex("UserId");

                    b.ToTable("NganHangDes");
                });

            modelBuilder.Entity("ITExam.Models.NhatKyHoatDong", b =>
                {
                    b.Property<int>("MaNhatKy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhatKy"));

                    b.Property<string>("ChuoiGhiNhatKy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTenGV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDe")
                        .HasColumnType("int");

                    b.Property<int>("MaLopHoc")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayGhi")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MaNhatKy");

                    b.HasIndex("MaDe");

                    b.HasIndex("MaLopHoc");

                    b.HasIndex("UserId");

                    b.ToTable("NhatKyHoatDongs");
                });

            modelBuilder.Entity("ITExam.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Khoa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Lop")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ITExam.Models.CauHoiNganHangDe", b =>
                {
                    b.HasOne("ITExam.Models.NganHangDe", "NganHangDe")
                        .WithMany("CauHoiNganHangDes")
                        .HasForeignKey("MaNHD")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("NganHangDe");
                });

            modelBuilder.Entity("ITExam.Models.ChiTietBaiLam", b =>
                {
                    b.HasOne("ITExam.Models.LichSuLamBai", "LichSuLamBai")
                        .WithMany("ChiTietBaiLams")
                        .HasForeignKey("LichSuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ITExam.Models.CauHoiNganHangDe", "CauHoi")
                        .WithMany("ChiTietBaiLams")
                        .HasForeignKey("MaCauHoi")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CauHoi");

                    b.Navigation("LichSuLamBai");
                });

            modelBuilder.Entity("ITExam.Models.ChiTietLopHoc", b =>
                {
                    b.HasOne("ITExam.Models.LopHoc", "LopHoc")
                        .WithMany("ChiTietLopHocs")
                        .HasForeignKey("MaLopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITExam.Models.User", "User")
                        .WithMany("ChiTietLopHocs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LopHoc");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITExam.Models.DanhSachDeThiCuaLopHoc", b =>
                {
                    b.HasOne("ITExam.Models.DeThi", "DeThi")
                        .WithMany("DanhSachDeThiCuaLopHocs")
                        .HasForeignKey("MaDe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITExam.Models.LopHoc", "LopHoc")
                        .WithMany("DanhSachDeThiCuaLopHocs")
                        .HasForeignKey("MaLopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeThi");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("ITExam.Models.DeThi", b =>
                {
                    b.HasOne("ITExam.Models.NganHangDe", "NganHangDe")
                        .WithMany("DeThis")
                        .HasForeignKey("MaNHD")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ITExam.Models.User", "User")
                        .WithMany("DeThis")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NganHangDe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITExam.Models.LichSuLamBai", b =>
                {
                    b.HasOne("ITExam.Models.DeThi", "DeThi")
                        .WithMany("LichSuLamBais")
                        .HasForeignKey("MaDe")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ITExam.Models.LopHoc", "LopHoc")
                        .WithMany("LichSuLamBais")
                        .HasForeignKey("MaLopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITExam.Models.User", "User")
                        .WithMany("LichSuLamBais")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DeThi");

                    b.Navigation("LopHoc");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITExam.Models.LopHoc", b =>
                {
                    b.HasOne("ITExam.Models.User", "User")
                        .WithMany("LopHocs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITExam.Models.MaTranDeThi", b =>
                {
                    b.HasOne("ITExam.Models.DeThi", "DeThi")
                        .WithMany("MaTranDeThis")
                        .HasForeignKey("MaDe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeThi");
                });

            modelBuilder.Entity("ITExam.Models.NganHangDe", b =>
                {
                    b.HasOne("ITExam.Models.User", "User")
                        .WithMany("NganHangDes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITExam.Models.NhatKyHoatDong", b =>
                {
                    b.HasOne("ITExam.Models.DeThi", "DeThi")
                        .WithMany()
                        .HasForeignKey("MaDe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITExam.Models.LopHoc", "LopHoc")
                        .WithMany()
                        .HasForeignKey("MaLopHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITExam.Models.User", "User")
                        .WithMany("NhatKyHoatDongs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DeThi");

                    b.Navigation("LopHoc");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ITExam.Models.CauHoiNganHangDe", b =>
                {
                    b.Navigation("ChiTietBaiLams");
                });

            modelBuilder.Entity("ITExam.Models.DeThi", b =>
                {
                    b.Navigation("DanhSachDeThiCuaLopHocs");

                    b.Navigation("LichSuLamBais");

                    b.Navigation("MaTranDeThis");
                });

            modelBuilder.Entity("ITExam.Models.LichSuLamBai", b =>
                {
                    b.Navigation("ChiTietBaiLams");
                });

            modelBuilder.Entity("ITExam.Models.LopHoc", b =>
                {
                    b.Navigation("ChiTietLopHocs");

                    b.Navigation("DanhSachDeThiCuaLopHocs");

                    b.Navigation("LichSuLamBais");
                });

            modelBuilder.Entity("ITExam.Models.NganHangDe", b =>
                {
                    b.Navigation("CauHoiNganHangDes");

                    b.Navigation("DeThis");
                });

            modelBuilder.Entity("ITExam.Models.User", b =>
                {
                    b.Navigation("ChiTietLopHocs");

                    b.Navigation("DeThis");

                    b.Navigation("LichSuLamBais");

                    b.Navigation("LopHocs");

                    b.Navigation("NganHangDes");

                    b.Navigation("NhatKyHoatDongs");
                });
#pragma warning restore 612, 618
        }
    }
}
